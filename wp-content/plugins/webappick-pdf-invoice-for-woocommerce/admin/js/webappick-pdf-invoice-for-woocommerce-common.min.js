"use strict";!function(c){c(function(){c("#doaction, #doaction2").click(function(o){var e,i,n,_=c(this).attr("id").substr(2),_=c('select[name="'+_+'"]').val();return"wpifw_bulk_invoice"===_?(o.preventDefault(),e=[],c('tbody th.check-column input[type="checkbox"]:checked').each(function(){e.push(c(this).val())}),e.length?(i=e.join(","),n=-1!=woo_invoice_ajax_obj_2.woo_invoice_ajax_url_2.indexOf("?")?woo_invoice_ajax_obj_2.woo_invoice_ajax_url_2+"&action=wpifw_generate_invoice&order_ids="+i+"&_wpnonce="+woo_invoice_ajax_obj_2.nonce:woo_invoice_ajax_obj_2.woo_invoice_ajax_url_2+"?action=wpifw_generate_invoice&order_ids="+i+"&_wpnonce="+woo_invoice_ajax_obj_2.nonce,window.open(n,"_blank")):alert("You have to select orders first!"),!1):"wpifw_bulk_invoice_packing_slip"===_?(o.preventDefault(),e=[],c('tbody th.check-column input[type="checkbox"]:checked').each(function(){e.push(c(this).val())}),e.length?(i=e.join(","),n=-1!=woo_invoice_ajax_obj_2.woo_invoice_ajax_url_2.indexOf("?")?woo_invoice_ajax_obj_2.woo_invoice_ajax_url_2+"&action=wpifw_generate_invoice_packing_slip&order_ids="+i+"&_wpnonce="+woo_invoice_ajax_obj_2.nonce:woo_invoice_ajax_obj_2.woo_invoice_ajax_url_2+"?action=wpifw_generate_invoice_packing_slip&order_ids="+i+"&_wpnonce="+woo_invoice_ajax_obj_2.nonce,window.open(n,"_blank")):alert("You have to select orders first!"),!1):void 0})}),c("._winvoice_docs .toggle-indicator").on("click",function(){c(this).closest(".postbox").toggleClass("closed")}),c("#atttoorder").change(function(){!0!==this.checked?c("#emailAttechedData").css("display","none"):c("#emailAttechedData").css("display","block")}),c("#wpifw_download").change(function(){!0!==this.checked?c("#downloadAttechedData").css("display","none"):c("#downloadAttechedData").css("display","block")})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
